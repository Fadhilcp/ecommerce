<!-- setting header -->
<%- include("../../views/partials/user/header") %>

<style>
    body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            
            .main-content {
                display: flex;
                flex-direction: column;
            }
    
            .otp-form {
                margin-inline: auto;
                max-width: 400px;
                width: 100%;
            }
    
            .form-title {
                margin-top: 20px;
                text-align: start;
            }
    
            .forms input {
                font-family: "Rokkitt", Georgia, serif;
                width: 100%;
                padding: 10px;
                margin: 10px 0;
                outline: none;
                border: none;
                background-color: #d9d9d9;
            }
    
              .login-button {
                margin-top: 270px;
                text-align: center;
            }
    
            .back-btn {
                margin: 5px 0;
                text-align: start;
                color: #ef7c00;
            }
            .resend-btn {
                margin-left: 280px;
                text-align: start;
                color: #ef7c00;
            }
    
            .login-button {
                font-family: "Rokkitt", Georgia, serif;
                font-size: x-large;
                width: 100%;
                background-color: #ef7c00;
                color: rgb(0, 0, 0);
                outline: none;
                border: none;
                cursor: pointer;
            }
    
            .login-button:hover {
                background-color: #884600;
            }
            .image-section {
                width: 47rem;
               height: 32rem;
               overflow: hidden;
            }
    
            .image-section img {
                width: 100%;
            }
    
            @media (min-width: 768px) {
                .main-content {
                    flex-direction: row;
                    justify-content: center;
                }
            }
    
            .hr-line {
              margin-top: 0px;
              margin-bottom: 0px;  
              border-top: 2px solid #ef7c00;
            }
    
        </style>







<hr class="hr-line">
<main class="main-content">
    <div class="otp-form">
        <h3 class="form-title">Enter OTP</h3>


        <form method="post" class="forms" onsubmit="return validateOtpForm()">
            
            <input id="otp" name="otp" type="text" placeholder="OTP">
           
            <a href="/register" class="back-btn">Back</a>

            <a href="#" class="resend-btn" onclick="resendOtp()">Resend OTP</a>

            <span id="timerValue"></span>

            <button type="submit" class="login-button">CONFIRM</button>
        </form>
    </div>
    <div class="image-section"><img src="/images/perfume-ad.jpeg" alt=""></div>
</main>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>


     startTimer()

function startTimer() {
    const totalDuration = 60;
    const savedStartTime = localStorage.getItem("otpStartTime")

    let timer = 0;

    if (savedStartTime) {
        const elapsedTime = Math.floor((Date.now() - parseInt(savedStartTime, 10)) / 1000);
        timer = Math.max(totalDuration - elapsedTime, 0)
        
        if (timer === 0) {
            localStorage.removeItem("otpStartTime")
        }
    } 

    if (!savedStartTime || timer === 0) {
        localStorage.setItem("otpStartTime", Date.now())
        timer = totalDuration;
    }

    document.getElementById("timerValue").textContent = timer > 0 ? timer : "Expired"
    document.getElementById("otp").disabled = timer === 0

    if (timer > 0) {
        const interval = setInterval(() => {
            timer--
            document.getElementById("timerValue").textContent = timer > 0 ? timer : "Expired"
            if (timer === 0) {
                clearInterval(interval)
                document.getElementById("otp").disabled = true;
                localStorage.removeItem("otpStartTime")
            }
        }, 1000)
    }
}


function resendOtp() {

    if (document.getElementById("timerValue").textContent !== "Expired") {

        Swal.fire({
            icon: 'warning',
            title: 'Wait until timer expires',
            text: 'You can resend the OTP only after the timer has expired.',
        });
        return false
    }
   
    
    let timer = 60
    const otpInput = document.getElementById('otp').value


    fetch('/resendPasswordOtp', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ otp: otpInput }),
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok')
            }
            return response.json()
        })
        .then(data => {
            if (data.status) {
                Swal.fire({
                    icon: 'success',
                    title: 'OTP Resent Successfully',
                    showConfirmButton: false,
                    timer: 1500,
                })

                
                document.getElementById('timerValue').textContent = timer
                document.getElementById('otp').disabled = false
                localStorage.removeItem('otpStartTime')
                localStorage.setItem('otpStartTime', Date.now())
                startTimer()

            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: "An error occurred while resending OTP. Please try again.",
                })
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Network error occurred. Please try again.',
            })
        })

    return false
}




      function validateOtpForm(){
        const otpInput = document.getElementById('otp').value.trim()
       
        fetch('/forgotPasswordOtp', {
            method:'POST',
            headers:{
                'Content-Type':'application/json'
            },
            body:JSON.stringify({otp:otpInput})
        })
        .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok')
           }
             return response.json()
          }) 
          
            .then(data =>{
                if(data.status){

                      Swal.fire({
                      icon:'success',
                      title:'OTP Verified Successfully',
                      showConfirmButton:false,
                      timer:1500
                      }).then(()=>{
                         window.location.href = data.redirectUrl
                    })
                } 
                else{
                    Swal.fire({
                        icon:'error',
                        title:'Error',
                        text:data.message
                    })
                }
            }).catch(error =>{
                Swal.fire({
                    icon:'error',
                    title:'Invalid OTP',
                    text:'Please try again'
                })
            })
               
            return false
            }
        

</script>

</body>
</html>