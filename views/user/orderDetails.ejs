
<style>
    * {
        margin: 0;
        padding: 0;
    }

    body {
        background-color: #f5f5f5;
    }

    .header {
        background: white;
        padding: 1rem 2rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .logo {
        font-size: 2rem;
        color: #333;
        font-weight: bold;
        text-decoration: none;
    }

    .nav {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 1rem;
    }

    .nav-links {
        display: flex;
        gap: 2rem;
    }

    .nav-links a {
        text-decoration: none;
        color: #333;
        font-weight: 500;
    }

    .search-cart {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .search-box {
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .search-button {
        background: #ff6b00;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
    }

    .cart {
        text-decoration: none;
        color: #333;
    }

    .main-content {
        display: flex;
    }

    .sidebar {
        width: 250px;
        background: white;
        border-radius: 4px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .sidebar-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem;
        color: #333;
        text-decoration: none;
        border-bottom: 1px solid #eee;
    }

    .sidebar-item.active {
        background: #ef7c00;
        color: white;
    }



    .order-status {
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
        }
        
        .status-delivered {
            background-color: #d4edda;
            color: #155724;
        }
        
        .status-processing {
            background-color: #fff3cd;
            color: #856404;
        }
        
        .status-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .product-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

        .product-card:hover {
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .cancel-btn {
            border: 1px solid #dc3545;
            color: #dc3545;
            background: white;
            padding: 5px 15px;
            border-radius: 5px;
            transition: all 0.3s;
        }

        .cancel-btn:hover {
            background: #dc3545;
            color: white;
        }

        .address-card {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
        }

        .custom-select {
        border-radius: 10px;
        padding: 10px;
        border: 2px solid #ced4da;
        transition: all 0.3s ease-in-out;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);
    }

    .custom-select:focus {
        border-color: #dc3545; /* Bootstrap danger color */
        box-shadow: 0px 3px 8px rgba(220, 53, 69, 0.5);
    }

    .custom-select option:hover {
        background-color: #dc3545;
        color: white;
    }

   
</style>

 




<!-- setting header -->
<%- include("../../views/partials/user/header") %>




    <div class="main-content">
        <aside class="sidebar">
            <a href="/account" class="sidebar-item">Profile</a>
            <a href="/orders" class="sidebar-item active">Orders</a>
            <a href="/wallet" class="sidebar-item">Wallet</a>
            <a href="/address" class="sidebar-item">My Address</a>
            <a href="/updateProfile" class="sidebar-item">Update Profile</a>
            <% if(!user.googleId){ %>
                <a href="/changePassword" class="sidebar-item">Change Password</a>
                <% } %>
            <a href="/logout" class="sidebar-item">Logout</a>
        </aside>

    <main class="profile-content" style="flex: auto;">
        <div class="container py-5"> 

            <div class="container">
                <!-- Order Summary -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header text-white">
                                <h5 class="mb-0">Order Summary</h5>
                            </div>
                            <div class="card-body">
                                <h6>ID: <small><%= order.orderId %></small></h6>
                                <h6>Order Date: <small><%= order.date %></small></h6>
                                <h6>Payment Status: <small><%= order.paymentStatus %></small></h6>
                                <small>Total Amount: <strong>₹<%= order.totalPrice %></strong></small>
                                <h6>Final Amount: <small><strong>₹<%= order.finalPrice %></strong></small></h6>
                                <span class="order-status status-processing"><%= order.status %></span>
                            </div>
                        </div>
                    </div>
                </div>
            
                <!-- Order Items ================================================ -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header text-white">
                                <h5 class="mb-0">Ordered Items</h5>
                            </div>
                            <div class="card-body">
                                <table class="table table-bordered">
                                    <thead class="thead-light">
                                        <tr class="text-center">
                                            <th>Image</th>
                                            <th>Product Name</th>
                                            <th>Capacity</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% order.products.forEach((item) => { %>
                                        <tr class="text-center align-middle">
                                            <td style="vertical-align: middle;">
                                                <img src="/uploads/reImage/<%= item.productImage %>" alt="Product" class="img-fluid rounded" width="60">
                                            </td>
                                            <td style="vertical-align: middle;"><%= item.productName %></td>
                                            <td style="vertical-align: middle;"><%= item.capacity %></td>
                                            <td style="vertical-align: middle;"><%= item.quantity %></td>
                                            <td style="vertical-align: middle;">₹<%= item.price %></td>
                                            <td style="vertical-align: middle;">
                                                <% if (order.status !== 'Cancelled' && order.status !== 'Requested') { %>
                                                    <% if (item.cancelStatus !== 'Cancelled' && item.cancelStatus !== 'Requested' && item.cancelStatus !== 'Rejected' && item.cancelStatus !== 'Approved') { %>
                                                        <% if (order.status === 'Delivered') { %>
                                                            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#returnItemModal<%= item.product %>">
                                                                Return
                                                            </button>
                                                        <% } else { %>
                                                            <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#cancelModal<%= item.product %>">
                                                                Cancel
                                                            </button>
                                                        <% } %>
                                                    <% } %>
                                                <% } %>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            
                <!-- Shipping Address================================== -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header text-white">
                                <h5 class="mb-0">Shipping Address</h5>
                            </div>
                            <div class="card-body">
                                <p><strong><%= order.address.name %></strong></p>
                                <p><%= order.address.houseNo %>, <%= order.address.street %></p>
                                <p><%= order.address.city %>, <%= order.address.pincode %></p>
                                <p><strong>Phone:</strong> <%= order.address.phone %></p>
                            </div>
                        </div>
                    </div>
                </div>

              <!-- Cancel Order Button ========================================== -->
               <% if(order.status === 'Pending' || order.status === 'Shipped'){ %>
                <% if(order.products.every(product => product.cancelStatus === 'Pending')){ %>
<button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
    Cancel Order
</button>
<% } %>
    <% } %>

    <% if(order.status === 'Delivered'){ %>
        <% if (order.products.every(product => product.cancelStatus === 'Pending')){ %>
        <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#returnOrderModal">
            Return
        </button>
        <% } %>
            <% } %>

            <% if(order.status !== 'Cancelled' && order.paymentStatus !== 'Failed'){ %>
            <button class="btn btn-muted" onclick="downloadInvoice('<%= order._id %>')">
                Download Invoice
            </button> 
            <% } %>

            <% if( order.status !== 'Cancelled' && order.paymentStatus === 'Failed'){ %>
            <button class="btn btn-success" onclick="payNow('<%= order._id %>', '<%= order.finalPrice %>')">
                Continue Payment
            </button>
            <% } %>
            </div>


<!-- ================================================================================================= -->
    

                   
<!-- Return Order Modal =====================================================-->
<div class="modal fade" id="returnOrderModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label fw-bold text-dark">Select Reason for Cancellation</label>
                        <select class="form-select custom-select" id="returnReason">
                            <option value="">Choose a reason</option>
                            <option value="Received Damaged Item">Received Damaged Item</option>
                            <option value="Wrong Product Delivered">Wrong Product Delivered</option>
                            <option value="Defective Item">Defective Item</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger confirm-cancel" onclick="returnOrder('<%= order._id %>')">
                    Confirm Cancellation
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Return order modal ------------------------------------------------------------------ -->


            
<!-- Cancel Order Modal =====================================================-->
<div class="modal fade" id="cancelOrderModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cancel Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label fw-bold text-dark">Select Reason for Cancellation</label>
                        <select class="form-select custom-select" id="cancelReason">
                            <option value="">Choose a reason</option>
                            <option value="Ordered Wrong Item">Ordered Wrong Items</option>
                            <option value="Changed My Mind">Changed My Mind</option>
                            <option value="Delivery Time Too Long">Delivery Time Too Long</option>
                            <option value="Found Better Price">Found Better Price</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger confirm-cancel" onclick="cancelOrder('<%= order._id %>')">
                    Confirm Cancellation
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Cancel order modal ------------------------------------------------------------------ -->




      <!-- Return individual item Modal =====================================================-->
      <% order.products.forEach((item) => { %>
        <div class="modal fade" id="returnItemModal<%= item.product %>" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Return Product</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="mb-3">
                                <label class="form-label fw-bold text-dark">Select Reason for Cancellation</label>
                                <select class="form-select custom-select" id="returnItemReason<%= item.product %>">
                                    <option value="">Choose a reason</option>
                                    <option value="Received Damaged Item">Received Damaged Item</option>
                                    <option value="Wrong Product Delivered">Wrong Product Delivered</option>
                                    <option value="Defective Item">Defective Item</option>
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger confirm-cancel" onclick="returnItem('<%= item.product %>' ,'<%= order._id %>')">
                            Confirm Cancellation
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <% }) %>
        <!-- Return item modal ------------------------------------------------------------------ -->

        


<!----------------- For individual order cancel ---------------------------- -->
            <% order.products.forEach((item) => { %>
            <div class="modal fade" id="cancelModal<%= item.product %>" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Cancel Product</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <form>
                                <div class="mb-3">
                                    <label class="form-label fw-bold text-dark">Select Reason for Cancellation</label>
                                    <select class="form-select custom-select" id="cancelReason<%= item.product %>">
                                        <option value="">Choose a reason</option>
                                        <option value="Ordered Wrong Item">Ordered Wrong Item</option>
                                        <option value="Changed My Mind">Changed My Mind</option>
                                        <option value="Found Better Price">Found Better Price</option>
                                        <option value="other">Other</option>
                                    </select>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-danger" onclick="cancelItem('<%= item.product %>','<%= order._id %>')">Confirm Cancellation</button>
                        </div>
                    </div>
                </div>
            </div>
            <% }) %>
<!-- for individual cancel ------------------------------- -->

        

            </main>
        
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>

   async function cancelOrder(orderId){
        try {

            const reason = document.getElementById('cancelReason').value

            if(!reason){
                Swal.fire({
                             icon: 'info',
                             title:'Please choose a reason!',
                             showConfirmButton: false,
                             timer: 2000,
                         })
                         return 
            }

           const result = await Swal.fire({
                title: "Cancel Order",
                text: "Are you sure you want to cancel this order?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#42ce00",
                cancelButtonColor: "#c52300",
                confirmButtonText: "Yes, cancel the order!"
            })

            if(result.isConfirmed){

                const response = await fetch(`/cancelOrder/${orderId}`,{
                method:'PATCH',
                headers:{
                    'content-type':'application/json'
                },
                body:JSON.stringify({reason})
            })

            const data = await response.json()

            if(response.ok && data.status){

                await Swal.fire({
                title: "Canceled",
                text: "Order has been canceled successfully",
                icon: "success",
                showCancelButton: false,
            })

            window.location.href = data.redirectUrl

            }else{
                Swal.fire({
                title: "warning",
                text: data.message,
                icon: "info",
                showCancelButton: false,
            })
            }

            }
        
        } catch (error) {
            Swal.fire({
            title: "Try Again",
            text: 'Please try again later',
            icon: "warning",
            showCancelButton: false,
        })
        }
    }


    async function returnOrder(orderId){
        try {

            const reason = document.getElementById('returnReason').value

            if(reason === ''){
                Swal.fire({
                             icon: 'info',
                             title:'Please choose a reason!',
                             showConfirmButton: false,
                             timer: 2000,
                         })
                         return 
            }

           const result = await Swal.fire({
                title: "Return Order",
                text: "Are you sure you want to return this order?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#42ce00",
                cancelButtonColor: "#c52300",
                confirmButtonText: "Yes, return the order!"
            })

            if(result.isConfirmed){

                const response = await fetch(`/returnOrder/${orderId}`,{
                method:'PATCH',
                headers:{
                    'content-type':'application/json'
                },
                body:JSON.stringify({reason})
            })

            const data = await response.json()

            if(response.ok && data.status){

                await Swal.fire({
                title: "Return Requested",
                text: "Your return request has been submitted successfully.",
                icon: "success",
                showCancelButton: false,
            })

            window.location.reload()

            }else{
                Swal.fire({
                title: "warning",
                text: data.message || 'Something went wrong. Please try again!',
                icon: "info",
                showCancelButton: false,
            })
            }

            }
        
        } catch (error) {
            Swal.fire({
            title: "Try Again",
            text: 'Please try again later',
            icon: "warning",
            showCancelButton: false,
        })
        }
    }


    async function cancelItem(productId,orderId) {
    try {
        const reason = document.getElementById(`cancelReason${productId}`).value

        if (!reason) {
            Swal.fire({
                icon: 'info',
                title: 'Please choose a reason!',
                showConfirmButton: false,
                timer: 2000,
            })
            return
        }

        const result = await Swal.fire({
            title: "Cancel Item",
            text: "Are you sure you want to cancel this item?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#dc3545",
            cancelButtonColor: "#6c757d",
            confirmButtonText: "Yes, Cancel Item"
        })

        if (result.isConfirmed) {
            const response = await fetch(`/cancelItem/${orderId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({productId , reason})
            })

            const data = await response.json()

            if (response.ok && data.status) {
                await Swal.fire({
                    title: "Canceled",
                    text: data.message || "Item has been canceled successfully",
                    icon: "success",
                    showCancelButton: false,
                })
                window.location.reload()
            } else {
                Swal.fire({
                    title: "Error",
                    text: data.message,
                    icon: "error",
                    showCancelButton: false,
                })
            }
        }
    } catch (error) {
        Swal.fire({
            title: "Try Again",
            text: 'Please try again later',
            icon: "warning",
            showCancelButton: false,
        })
    }
}



async function returnItem(productId,orderId) {
    try {
        const reason = document.getElementById(`returnItemReason${productId}`).value

        if (!reason) {
            Swal.fire({
                icon: 'info',
                title: 'Please choose a reason!',
                showConfirmButton: false,
                timer: 2000,
            })
            return
        }

        const result = await Swal.fire({
            title: "Return Item",
            text: "Are you sure you want to return this item?",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#dc3545",
            cancelButtonColor: "#6c757d",
            confirmButtonText: "Yes, Return Item"
        })

        if (result.isConfirmed) {
            const response = await fetch(`/returnItem/${orderId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({productId , reason})
            })

            const data = await response.json()

            if (response.ok && data.status) {
                await Swal.fire({
                    title: "Canceled",
                    text: data.message || "Return request submitted successfully",
                    icon: "success",
                    showCancelButton: false,
                })
                window.location.reload()
            } else {
                Swal.fire({
                    title: "Error",
                    text: data.message,
                    icon: "error",
                    showCancelButton: false,
                })
            }
        }
    } catch (error) {
        Swal.fire({
            title: "Try Again",
            text: 'Please try again later',
            icon: "warning",
            showCancelButton: false,
        })
    }
}



function payNow(orderId, finalPrice) {
    fetch('/createOrder', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ orderId, finalPrice })
    })
    .then(response => response.json())
    .then(orderData => {
        if (!orderData.success) {
            Swal.fire({
                icon: 'error',
                title: 'Payment Initialization Failed',
                text: 'Please try again.',
                showConfirmButton: true,
            })
            return
        }

        let options = {
            "key": orderData.key, 
            "amount": orderData.razorpayOrder.amount,
            "currency": orderData.razorpayOrder.currency,
            "name": "PERFUMORA",
            "description": "Order Payment",
            "order_id": orderData.razorpayOrder.id,
            "handler": function (response) {
                fetch('/verifyPayment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ ...response, orderId }),
                })
                .then(res => res.json())
                .then(verifyData => {
                    Swal.fire({
                        icon: verifyData.status ? 'success' : 'error',
                        title: verifyData.status ? 'Payment Successful!' : 'Payment Failed!',
                        text: verifyData.status ? 'Your order has been placed successfully.' : 'Transaction verification failed.',
                        showConfirmButton: true,
                    }).then(() => {
                        window.location.reload()
                    })  
                })
            },
            "prefill": {
                "name": "Customer Name",
                "email": "customer@example.com",
                "contact": "0909090900"
            },
            "theme": { "color": "#ef7c00" },
        }

        let rzp = new Razorpay(options)
        rzp.open();
    })
    .catch(error => console.error("Payment Error:", error))
}


async function downloadInvoice(orderId){
    try {
        const response = await fetch(`/downloadInvoice/${orderId}`,{
            method:'GET'
        })

        if(!response.ok){
            console.error('Failed to download invoice')
        }

        const blob = await response.blob()
        const url = window.URL.createObjectURL(blob)
        const a = document.createElement("a")
        a.href = url
        a.download = `invoice-Order.pdf`
        document.body.appendChild(a)
        a.click()
        document.body.removeChild(a)
        
    } catch (error) {
        console.error("Error downloading invoice:", error)
    }
}


</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- jQuery -->
<script src="/js/jquery.min.js"></script>
<!-- popper -->
<script src="/js/popper.min.js"></script>
<!-- bootstrap 4.1 -->
<script src="/js/bootstrap.min.js"></script>
<!-- jQuery easing -->
<script src="/js/jquery.easing.1.3.js"></script>
 <!-- Waypoints -->
 <script src="/js/jquery.waypoints.min.js"></script>
 <!-- Flexslider -->
 <script src="/js/jquery.flexslider-min.js"></script>
 <!-- Owl carousel -->
 <script src="/js/owl.carousel.min.js"></script>
 <!-- Magnific Popup -->
 <script src="/js/jquery.magnific-popup.min.js"></script>
 <script src="/js/magnific-popup-options.js"></script>
 <!-- Date Picker -->
 <script src="/js/bootstrap-datepicker.js"></script>
 <!-- Stellar Parallax -->
 <script src="/js/jquery.stellar.min.js"></script>
 <!-- Main -->
 <script src="/js/main.js"></script>
</body>
</html>