
<!-- setting header -->
<%- include("../../views/partials/user/header") %>




<div class="breadcrumbs">
    <div class="container">
        <div class="row">
            <div class="col">
                <p class="bread"><span><a href="/shop">Shop</a></span> / <span>Shopping Cart</span></p>
            </div>
        </div>
    </div>
</div>


<div class="colorlib-product">
    <div class="container">
        <div class="row row-pb-lg">
                <div class="col-md-10 offset-md-1">
                <div class="process-wrap">
                    <div class="process text-center active">
                        <p><span>01</span></p>
                        <h3>Shopping Cart</h3>
                    </div>
                    <div class="process text-center">
                        <p><span>02</span></p>
                        <h3>Checkout</h3>
                    </div>
                    <div class="process text-center">
                        <p><span>03</span></p>
                        <h3>Order Complete</h3>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-pb-lg">


            <div class="col-md-12">
                <div class="product-name d-flex">
                    <div class="one-forth text-left px-4">
                        <span>Product Details</span>
                    </div>
                    <div class="one-eight text-center">
                        <span>Price</span>
                    </div>
                    <div class="one-eight text-center">
                        <span>Capacity</span>
                    </div>
                    <div class="one-eight text-center">
                        <span>Quantity</span>
                    </div>
                    <div class="one-eight text-center">
                        <span>Total</span>
                    </div>
                    <div class="one-eight text-center px-4">
                        <span>Remove</span>
                    </div>
                </div>

                <% if (cartItems.length > 0) { %>
                    <% cartItems.forEach(item => { %>
                <div class="product-cart d-flex">
                    <div class="one-forth">
                        
                        <img src="/uploads/reImage/<%= item.image %>" alt="Product Image" width="50">

                        <div class="display-tc">
                            <h3><%= item.name %></h3>
                        </div>
                    </div>
                    <div class="one-eight text-center">
                        <div class="display-tc">
                            <span class="price" id="price-<%= item._id %>">₹<%= item.price %></span>
                        </div>
                    </div>
                    <div class="one-eight text-center">
                        <div class="display-tc">
                            <span class="capacity"><%= item.capacity %></span>
                        </div>
                    </div>

                    <div class="d-flex align-items-center justify-content-center gap-2">
                        <button id="decrease-<%= item._id %>" 
                                class="btn btn-sm btn-light border px-1" 
                                onclick="updateQuantity('<%= item._id %>', -1)"
                                <%= item.quantity <= 1 ? 'disabled' : '' %>>
                            <i class="fas fa-minus"></i>
                        </button>
                        
                        <input type="text" id="quantity-<%= item._id %>" 
                               name="quantity" class="form-control text-center mx-1"
                               value="<%= item.quantity %>" readonly style="width: 50px; min-width: 50px;">
                        
                        <button id="increase-<%= item._id %>" 
                                class="btn btn-sm btn-light border px-1" 
                                onclick="updateQuantity('<%= item._id %>', 1)"
                                <%= item.quantity >= item.availableStock ? 'disabled' : '' %>>
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                    
                    
                    <div class="one-eight text-center">
                        <div class="display-tc">
                            <span class="totalPrice" id="totalPrice-<%= item._id %>">₹<%= item.price*item.quantity %></span>
                        </div>
                    </div>
                    <div class="one-eight text-center">
                        <div class="display-tc">
                            <a class="closed" onclick="deleteItem('<%= item._id %>')"></a>
                        </div>
                    </div>
                </div>
                <%})}%>
  
            </div>
        </div>
        <div class="row row-pb-lg" >
            <div class="col-md-12">
                <div class="total-wrap">
                    <div class="row">
                        <div class="col-sm-4 text-center">
                            
                            <% if (cartItems.length > 0) { %>
                            <div class="total">
                                <div class="sub">
                                    
                                    
                                        <% cartItems.forEach(item => { %>
                                    <p><span><%= item.name %>:</span> <span class="totalPrice" id="subTotal-<%= item._id %>">₹<%= item.price*item.quantity %></span></p>
                                    <%})%>
                                    <!-- <p><span>Delivery:</span> <span>$0.00</span></p>
                                    <p><span>Discount:</span> <span>$45.00</span></p> -->
                                </div>

                                <div class="grand-total">
                                    <p><span><strong>Total:</strong></span> <span id="grandTotal">₹<%= totalPrice %></span></p>
                                </div>
                                <div>
                                    <button class="btn btn-primary" onclick="toCheckout()">PROCEED TO CHECKOUT</button>
                                </div>
                                
                            </div>
                        </div>
                        <%}%>
                    </div>
                </div>
            </div>
        </div>

 
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>


async function updateQuantity(productId, change) {

    let quantityInput = document.getElementById(`quantity-${productId}`)
    let increaseButton = document.getElementById(`increase-${productId}`)
    let decreaseButton = document.getElementById(`decrease-${productId}`)
    const price = parseFloat(document.getElementById(`price-${productId}`).innerText.replace('₹', ''))

    let currentQuantity = parseInt(quantityInput.value)
    let newQuantity = currentQuantity + change

    if (newQuantity < 1 || newQuantity >5) {
        return Swal.fire({
                    icon: 'info',
                    title:'Quantity must between 1 to 5',
                    showConfirmButton: false,
                    timer: 2000,
                })
    }
    try {
        let response = await fetch('/updateCartQuantity', {
            method: 'PATCH',
            headers: { 'content-type': 'application/json' },
            body: JSON.stringify({ productId, quantity: newQuantity })
        })

        let data = await response.json()

        if (response.ok && data.status) {
            quantityInput.value = newQuantity

            document.getElementById(`totalPrice-${productId}`).innerText = `₹${(price * newQuantity)}`
            document.getElementById(`subTotal-${productId}`).innerText = `₹${(price * newQuantity)}`
            document.getElementById('grandTotal').innerText = `₹${data.newTotal}`

            let availableStock = data.availableStock
            decreaseButton.disabled = false

            increaseButton.disabled = newQuantity >= availableStock


        }else{

            
                Swal.fire({
                    icon: 'warning',
                    title:data.message,
                    showConfirmButton: false,
                    timer: 2000,
                })
                if(data.availableStock){
                    quantityInput.value = data.availableStock

                    document.getElementById(`totalPrice-${productId}`).innerText = `₹${(price * data.availableStock)}`
                    document.getElementById(`subTotal-${productId}`).innerText = `₹${(price * data.availableStock)}`
                    document.getElementById('grandTotal').innerText = `₹${data.newTotal}`
                }

        }
    } catch (error) {
        Swal.fire({
            title: "Try Again",
            text: 'Please try again later',
            icon: "error",
            showCancelButton: false,
        })
    }
}

     function deleteItem(itemId) {
                 Swal.fire({
                         title: "Are you sure?",
                         text: "Are you sure you want to remove this item?",
                         icon: "warning",
                         showCancelButton: true,
                         confirmButtonColor: "#d33",
                         cancelButtonColor: "#3085d6",
                         confirmButtonText: "Yes, remove it!"
                     }).then((result) => {
                       if (result.isConfirmed) {
                              fetch(`/deleteCartItem/${itemId}`, {
                                 method: 'DELETE',
                                 headers: {
                                    'Content-Type': 'application/json'
                               }
                           }).then(response => response.json()) 
                             .then(data => {
                                  if (data.status) { 
                                      Swal.fire(
                                          "Deleted!",
                                          "Item has been removed.",
                                          "success"
                            ).then(() => {
                                  window.location.reload()
                           })
                               } else {
                                   Swal.fire(
                                      "Error!",
                                      "Failed to remove the Item.",
                                      "error"
                            )
                          }
                          }).catch(err => {
                               Swal.fire(
                               "Error!",
                               "Something went wrong. Please try again.",
                               "error"
                             )
                          })
                        }
                      })  
    }


   function toCheckout() {

    const response = fetch('/checkStock',{
        method:'GET',
        headers:{
            'content-type':'application/json'
        }
    }).then(response => response.json())
    .then(data => {
        if(data.status){
            window.location.href = '/checkout'
        }else{
            Swal.fire({
                icon: 'warning',
                title: data.message || 'Please Try again',
                text: data.text || 'Insufficient stock for product',
                showConfirmButton: false,
                timer: 2000,
            })
        }
    })
    .catch(err => {
            Swal.fire(
                "Error!",
                "Something went wrong. Please try again.",
                "error"
            )
    })
    
}




</script>


        <!-- setting footer -->
        <%- include("../../views/partials/user/footer") %>



