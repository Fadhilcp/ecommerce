
<!-- setting header -->
<%- include("../../views/partials/admin/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">


<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Product</h4>
                </div>
                <div class="card-body">


                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" id="addProductForm">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" class="form-control" id="productName" name="productName" />
                            <p id="productName-error" class="error-message"></p>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea name="description" id="description" placeholder="Type here" class="form-control" rows="4"></textarea>
                            <p id="description-error" class="error-message"></p>
                        </div>

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <div class="row gx-2">
                                        <input type="text" class="form-control" name="regularPrice" id="regularPrice" />
                                        <p id="regularPrice-error" class="error-message"></p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Offer price</label>
                                    <input type="text" class="form-control" name="offerPrice" id="offerPrice" />
                                    <p id="offerPrice-error" class="error-message"></p>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <label class="form-label">Quantity</label>
                                <input type="text" class="form-control" name="quantity" id="quantity" value="1">
                                <p id="quantity-error" class="error-message"></p>
                            </div>

                            <div class="col-lg-4 mb-3">
                                <label class="form-label">Category</label>
                                <select class="form-select" name="category" id="category" >

                                    <%for(let i=0;i<cat.length;i++){%>
                                    <option value="<%= cat[i].name %>">
                                        <%= cat[i].name %>
                                    </option>
                                    <%}%>
                                </select>
                                <p id="category-error" class="error-message"></p>
                            </div>
                            <div class="col-lg-4 mb-3">
                                <label class="form-label">Capacity</label>
                                <select class="form-select" name="capacity" id="capacity" >
                                    <option value="30ml">30ml</option>
                                    <option value="50ml">50ml</option>
                                    <option value="75ml">75ml</option>
                                    <option value="100ml">100ml</option>
                                </select>
                                <p id="capacity-error" class="error-message"></p>
                            </div>
                        </div>
        
                            


                                    <h6>Choose images</h6>


                                    <div id="addedImagesContainer" class="thumbnails-container"></div>

                                <div class="row">
                                     <div class="align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView1">
                                        <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 60px; margin-top: 60px;">
                                       <img src="" id="croppedImg1" alt="">
                                          </div>
                                         <input class="form-control" type="file" name="images" id="input1"
                                             accept="image/png, image/jpeg, image/jpg"
                                             onchange="viewImage1(event), viewImage(event, 1)">
                                       <div id="images1-error" class="error-message"></div>
                                       <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                      </div>      
                                            </div>
                                                
                                            


                                            <div class="row">
                                                <div class="align-items-center" style="margin-bottom: 20px;">
                                                   <img src="" alt="" id="imgView2">
                                                   <div class="image-cropper d-flex align-items-center"
                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 60px; margin-top: 60px;">
                                                  <img src="" id="croppedImg2" alt="">
                                                     </div>
                                                    <input class="form-control" type="file" name="images" id="input2"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="viewImage2(event), viewImage(event, 2)">
                                                  <div id="images2-error" class="error-message"></div>
                                                  <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                 </div>      
                                                       </div>
                                                 
                                       

                                       <div class="row">
                                        <div class="align-items-center" style="margin-bottom: 20px;">
                                           <img src="" alt="" id="imgView3">
                                           <div class="image-cropper d-flex align-items-center"
                                           style="display:none; width: 300px; height: 200px; margin-bottom: 60px; margin-top: 60px;">
                                          <img src="" id="croppedImg3" alt="">
                                             </div>
                                            <input class="form-control" type="file" name="images" id="input3"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage3(event), viewImage(event, 3)">
                                          <div id="images3-error" class="error-message"></div>
                                          <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                         </div>      
                                               </div>

                                             
                           
                               
                             <p id="error-msg" class="error-message text-danger"></p>
                        <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit(event)">Add</button>

                    </form>
                </div>
            </div>
            <!-- card end// -->
        </div>
    </div>
</section>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>


<script defer>



 async function validateAndSubmit(event){
    if(validateForm()){

        const msg = document.getElementById('error-msg')
            event.preventDefault()
            let form = document.getElementById('addProductForm')
            let formData = new FormData(form)

            try {
                
                let response = await fetch(`/admin/addProducts`,{
                    method:'POST',
                    body:formData
                })

                const data = await response.json()

                        if(response.ok && data.status){
                           if(data.redirectUrl){
                            window.location.href = data.redirectUrl
                           }else{
                            msg.innerHTML = 'redirect Failed'
                           }
                        }else{
                            msg.innerHTML = data.message
                        }

                       } catch (error) {
                        msg.innerHTML = 'Failed to connect to the server'
                       }
    }else{
        console.log('Form vaildation Failed')
    }
 }

  function viewImage1(event){
    document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
  }
  function viewImage2(event){
    document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
  }
  function viewImage3(event){
    document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
  }


  function viewImage(event,index){

    let input = event.target
    let reader = new FileReader()
    reader.onload = function(){
        let dataURL = reader.result
        let image = document.getElementById('imgView'+index)
        image.src = dataURL
        let cropper = new Cropper(image,{
            aspectRatio:1,
            viewMode:1,
            guides:true,
            background:false,
            autocropArea:1,
            zoomable:true
        })

        let cropperContainer = document.querySelector('#croppedImg'+ index).parentNode
        cropperContainer.style.display = 'block'


        let saveButton = document.querySelector('#saveButton'+ index)
        saveButton.addEventListener('click',async function () {

            let croppedCanvas = cropper.getCroppedCanvas()
            let croppedImage = document.getElementById('croppedImg'+ index)
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg',1.0)


            let timestamp = new Date().getTime()
            let fileName = `cropped-img-${timestamp}-${index}.png`

            await croppedCanvas.toBlob(blob=>{
                let input = document.getElementById('input'+index)
                let imgFile = new File([blob],fileName)
                const fileList = new DataTransfer()

                fileList.items.add(imgFile)
                input.files = fileList.files
            })
    
            cropperContainer.style.display = 'none'
            image.style.display = 'none'
            cropper.destroy()

        })
    }

    reader.readAsDataURL(input.files[0])
  }



  const selectedImages = []
  document.getElementById('input1').addEventListener('change',handleFileSelect)


  function handleFileSelect(event){


    const addedImagesContainer = document.getElementById('addedImagesContainer')
    addedImagesContainer.innerHTML = ''
    const files = event.target.files
    for(let i=0;i<files.length;i++){
        const file = files[i]
        selectedImages.push(file)
        const thumbnail = document.createElement('div')
        thumbnail.classList.add('thumbnail')

        const img = document.createElement('img')
        img.src = URL.createObjectURL(file)
        img.alt = 'thumbnail'
        img.style.width = '50px'
        img.style.height = 'auto'

        const removeIcon = document.createElement('span')
        removeIcon.classList.add('removeIcon')
        removeIcon.innerHTML = '&times;'
        removeIcon.addEventListener('click',function(){
            const index = selectedImages.indexOf(file)

            if(index !== -1){
                selectedImages.splice(index,1)
            }
            thumbnail.remove()
        })

        thumbnail.appendChild(img)
        thumbnail.appendChild(removeIcon)
        addedImagesContainer.appendChild
    }
  }


function validateForm() {

              clearErrorMessages()

              const name = document.getElementById('productName').value
              const description = document.getElementById('description').value
              const price = document.getElementById('regularPrice').value
              const offerPrice = document.getElementById('offerPrice').value
              const category = document.getElementById('category').value
              const images1 = document.getElementById('input1')
              const images2 = document.getElementById('input2')
              const images3 = document.getElementById('input3')
              const quantity = document.getElementById('quantity').value
              let isValid = true




    if (name.trim() === "") {
      displayErrorMessage('productName-error', 'Please enter a product name.')
      isValid = false
   } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
      displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.')
      isValid = false
   }
           
   


   if (description.trim() === "") {
      displayErrorMessage('description-error', 'Please enter a product description.')
      isValid = false
   } else if (!/^[a-zA-Z\s.,'"-]+$/.test(description.trim())) {
      displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.')
      isValid = false
   }
  
  
           
  
  
              if ( parseInt(quantity) < 0) {
                  displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.')
                  isValid = false
              }else if (isNaN(quantity)) {
                   displayErrorMessage('quantity-error', 'Please enter Numbers only.')
                    isValid = false
              }
  
  
  
  
              if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                  displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.')
                  isValid = false
              }
  
  

  
              if (!/^\d+(\.\d{1,2})?$/.test(offerPrice) || parseFloat(offerPrice) < 0) {
                  displayErrorMessage('offerPrice-error', 'Please enter a valid non-negative price.')
                  isValid = false
              }
              if (parseFloat(price) < parseFloat(offerPrice)) {
                  displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.')
                  isValid = false
              }



              if (images1.files.length === 0) {
                  displayErrorMessage("images1-error",'Please select an image');
                  isValid = false;
              }
              if (images2.files.length === 0) {
                  displayErrorMessage("images2-error",'Please select an image');
                  isValid = false;
              }
              if (images3.files.length === 0) {
                  displayErrorMessage("images3-error",'Please select an image');
                  isValid = false;
              }

              return isValid;
          }



          function displayErrorMessage(elementId, message) {
              var errorElement = document.getElementById(elementId)
              errorElement.innerText = message
              errorElement.style.display = "block"
              errorElement.style.color = "red"
          }


          function clearErrorMessages() {
              const errorElements = document.getElementsByClassName('error-message')
              
              Array.from(errorElements).forEach(element => {
                  element.innerText = ''
              })
     
             }


</script>


<!-- setting footer -->
<%- include("../../views/partials/admin/footer") %>